#include<stdio.h>
#include <stdlib.h>
#include <string.h>
#include <fcntl.h>

void printScreen(char* buf)
{
	printf("\033[30;42m %-10s \033[0m",buf);
}

void printState(char* buf)
{
	printf("\033[30;43m %-10s \033[0m",buf);
}

void printNumber(char* buf)
{
	printf("\033[30;46m %-10s \033[0m",buf);
}

void printUndefined(char* buf)
{
	printf("\033[37;41m %-10s \033[0m",buf);
}

void printBranch(int n)
{
	int i;
	for(i=n;i<8;i++)
	{
		printf("    ");
	}
	printf("         |");
	for(i=0;i<n;i++)
	{
		printf("--------------");
		printf((i+1==n/2)?"^":"|");
	}
	printf("\n");
	fflush(stdout);
}

/*
void printChildren(char a[][50],int n)
{
	int i;
	printBranch(n);
//	printf("\n");
	for(i=n;i<8;i++)
	{
		printf("\t");
	}
	
	i=0;
	for(i=0;i<n;i++)
	{
		if(i%4 ==0)
			printScreen(a[i]);
		else if(i%4 ==1)
			printState(a[i]);
		else if(i%4 ==2)
			printNumber(a[i]);
		else if(i%4 ==3)
			printUndefined(a[i]);
		printf("\t");
		printf((i+1==n/2)?"\t":"");
	}
	printf("\n\n");
}*/

void printParent(char* buf, int n)
{
	int i;
	printf("    ");
	for(i=n;i<8;i++)
	{
		printf("    ");
	}
	i=0;
	for(i=0;i<n/2;i++)
	{
		printf("             ");
	}
	printf("\033[37;44m %-10s \033[0m\n", buf);
	fflush(stdout);
}

void printline(char line[][10], int count[], int n)
{
	int m,i;
	printf("    ");
	for(i=n;i<8;i++)
	{
		printf("    ");
	}
	for(m=0; m<n; m++)
	{
		//printf("cnt %d\t", count[m]);
		if(count[m] != 0)
		{
			char temp[11];
			memset(temp, 0, sizeof(temp));
			strncpy(temp, line[m], 10);
			if(m%4 ==0)
				printScreen(temp);
			else if(m%4 ==1)
				printState(temp);
			else if(m%4 ==2)
				printNumber(temp);
			else if(m%4 ==3)
				printUndefined(temp);

			//printf("%-10s", temp);
		}
		printf("    ");
		printf((m+1==n/2)?"          ":"");
		memset(line[m], 0, sizeof(line[m]));
	}
	printf("\n");
}

void printer(char par[50], char child[][50], int n)
{
	int i,max, len[8], mul;
	char str[8][10];
	max = strlen(child[0]);
	printParent(par, n);
	printBranch(n);	
	for(i=0;i<n;i++)
	{
		//printf("  len %d  ", strlen(child[i]));
		if(strlen(child[i])>max)
				max = strlen(child[i]);
	}
	//Find the number of lines that the child will take
	max = max / 10;
	if(max % 10 != 0)
		max +=1;
	
	mul = 0;
	for(i=0;i<max;i++)
	{
		int j,ptr;
		for(j=0; j<n; j++)
		{
			ptr = 10 * mul;
			memset(str[j], 0, sizeof(str[j]));
			if(strlen(child[j])>ptr)
			{
				strncpy(str[j], child[j]+ptr, 10);
				len[j] = 10;
			}
			else
			{
				strncpy(str[j],"          ", 10);
				len[j] = 10;
			}
		}
		mul++;
		printline(str, len, n);
	}
}

int main()
{
	char a[][50] = {"hellowre","rwetqtr","On_us_good_fit_state","wertwwet","etwrywryw","rtwertet","wretwetwet","wtwretwt"};
	char b[][50] = {"On_us_good_fit_state","On_us_good_fit_state","On_us_good_fit_state","On_us_good_fit_state","On_us_good_fit_state","On_fit_state","On_us_good_fit_state","On_us_good_fit_state"};

	printer("Parent", a, 8);
	printf("\n\n");
	printer("On_us_good_fit_state", a, 7);	
	printf("\n\n");	
	printer("Parent", a, 6);
	printf("\n\n");	
	printer("Parent", a, 5);
	printf("\n\n");
//	printParent("Parent");
//	printChildren(a, 7);
//	printParent("Parent");
//	printChildren(b, 8);
//	printf("\n\n");
//	printParent("Parent");
//	printChildren(a, 4);
//	printf("\n\n");
//	printParent("Parent");
//	printChildren(a, 2);
}
